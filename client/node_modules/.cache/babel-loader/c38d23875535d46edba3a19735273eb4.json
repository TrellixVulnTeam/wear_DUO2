{"ast":null,"code":"var _jsxFileName = \"/Users/mac/development /practice/wear/client/src/components/sign-up/sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./sign-up.styles.scss\";\nimport React, { useState } from \"react\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = _ref => {\n  _s();\n\n  let {\n    signUpStart\n  } = _ref;\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (password !== confirmPassword) return;\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"It do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        required: true,\n        onChange: handleChange,\n        label: \"Display Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        required: true,\n        onChange: handleChange,\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        required: true,\n        onChange: handleChange,\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        required: true,\n        onChange: handleChange,\n        label: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignUp, \"M6TACI4fTz6yZtyxhY9RHf5l6kI=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mac/development /practice/wear/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","CustomButton","FormInput","connect","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import \"./sign-up.styles.scss\";\n\nimport React, { useState } from \"react\";\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nconst SignUp = ({signUpStart}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  })\n  const { displayName, email, password, confirmPassword } = userCredentials;\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (password !== confirmPassword) return;\n    signUpStart({ displayName, email, password });\n  }\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setCredentials({...userCredentials, [name]: value })\n  }\n\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">It do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            required\n            onChange={handleChange}\n            label=\"Display Name\"\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            required\n            onChange={handleChange}\n            label=\"Email\"\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            required\n            onChange={handleChange}\n            label=\"Password\"\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            required\n            onChange={handleChange}\n            label=\"Confirm Password\"\n          />\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  \n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}