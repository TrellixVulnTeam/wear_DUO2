{"ast":null,"code":"import SHopActionTypes from \"./shop.types\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: SHopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: SHopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: SHopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => {\n      dispatch(fetchCollectionsFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mac/development /practice/wear/client/src/redux/shop/shop.action.js"],"names":["SHopActionTypes","convertCollectionSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapShot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,8BAAT,QAA+C,+BAA/C;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAD,KAAkB;AACtDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,wBADiC;AAEtDH,EAAAA,OAAO,EAACE;AAF8C,CAAlB,CAA/B;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,cAAc,GAAGN,8BAA8B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGa,KANH,CAMUC,KAAD,IAAW;AAChBP,MAAAA,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAR;AACD,KARH;AASD,GAZD;AAaD,CAdM","sourcesContent":["import SHopActionTypes from \"./shop.types\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: SHopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: SHopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure =(errorMessage) =>({\n  type:SHopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload:errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef\n      .get()\n      .then((snapShot) => {\n        const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => {\n        dispatch(fetchCollectionsFailure(error.message))\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}