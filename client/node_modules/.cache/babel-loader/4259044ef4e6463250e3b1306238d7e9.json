{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport logger from \"redux-logger\";\nimport { persistStore } from 'redux-persist';\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-sagas\"; // Create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // Then run the saga\n\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/mac/development /practice/wear/client/src/redux/store.js"],"names":["applyMiddleware","createStore","createSagaMiddleware","logger","persistStore","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,MAAMM,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EACA;AACIH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAGA,OAAO,MAAOU,KAAK,GAAGZ,WAAW,CAACI,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAA1B,C,CAER;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAIA,OAAO,MAAMS,SAAS,GAAGX,YAAY,CAACS,KAAD,CAA9B","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\n\nimport createSagaMiddleware from \"@redux-saga/core\";\nimport logger from \"redux-logger\";\nimport { persistStore } from 'redux-persist'\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-sagas\";\n\n// Create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [sagaMiddleware];\n\nif(process.env.NODE_ENV === 'development')\n{\n    middlewares.push(logger);\n}\n\n\n export const  store = createStore(rootReducer, applyMiddleware(...middlewares));\n\n// Then run the saga\nsagaMiddleware.run(rootSaga);\n\n\n\nexport const persistor = persistStore(store);\n\n\n\n"]},"metadata":{},"sourceType":"module"}