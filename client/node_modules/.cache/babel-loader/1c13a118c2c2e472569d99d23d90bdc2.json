{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.action\";\nimport SHopActionTypes from \"./shop.types\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(SHopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/mac/development /practice/wear/client/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeLatest","fetchCollectionsFailure","fetchCollectionsSuccess","SHopActionTypes","convertCollectionSnapshotToMap","firestore","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,eAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,8BAAT,QAA+C,+BAA/C;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGF,SAAS,CAACG,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACM,8BAAD,EAAiCK,QAAjC,CAAjC;AACA,UAAMV,GAAG,CAACG,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACE,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,UAAU,CACdG,eAAe,CAACY,uBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,QAAV,GAAqB;AAC1B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.action\";\n\nimport SHopActionTypes from \"./shop.types\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    SHopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSaga() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}