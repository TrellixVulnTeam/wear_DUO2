{"ast":null,"code":"import { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nimport { CartActionTypes } from \"./cart.types\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartRdeucer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartRdeucer;","map":{"version":3,"sources":["/Users/mac/development /practice/wear/client/src/redux/cart/cart.reducer.js"],"names":["addItemToCart","removeItemFromCart","CartActionTypes","INITIAL_STATE","hidden","cartItems","cartRdeucer","state","action","type","TOOGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,kBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKF,eAAe,CAACS,QAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnB,OAAP;;AAIF,SAAKV,eAAe,CAACW,oBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACRC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC;AAFN,OAAP;;AAMF,SAAKd,eAAe,CAACe,WAArB;AACE,aAAM,EACJ,GAAGV,KADC;AAEJF,QAAAA,SAAS,EAACJ,kBAAkB,CAACM,KAAK,CAACF,SAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFxB,OAAN;;AAIF,SAAKV,eAAe,CAACgB,UAArB;AACE,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,SAAS,EAAC;AAFL,OAAP;;AAKF;AACE,aAAOE,KAAP;AA9BJ;AAgCD,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import { addItemToCart, removeItemFromCart } from \"./cart.utils\";\n\nimport { CartActionTypes } from \"./cart.types\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst cartRdeucer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOOGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.id !== action.payload.id\n        ),\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return{\n        ...state,\n        cartItems:removeItemFromCart(state.cartItems,action.payload)\n      }\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems:[]\n      }  \n\n    default:\n      return state;\n  }\n};\n\nexport default cartRdeucer;\n"]},"metadata":{},"sourceType":"module"}